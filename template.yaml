AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A CodePipeline to wrap another CodePipeline, allowing Continuous Deployment of pipeline configuration updates

Metadata:
  AWS::ServerlessRepo::Application:
    Name: meta-codepipeline
    Description: A CodePipeline to wrap another CodePipeline, allowing Continuous Deployment of pipeline configuration updates
    Author: Symphonia
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['codepipeline', 'cd', 'devops', 'github']
    HomePageUrl: https://github.com/symphoniacloud/meta-codepipeline
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/symphoniacloud/meta-codepipeline

Parameters:
  GitHubOAuthToken:
    Description: A valid access token for GitHub that has admin access to the GitHub Repo you specify
    Type: String
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: '[a-z0-9]*'

  GitHubOwner:
    Description: The owner of the GitHub repo to use
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubRepo:
    Description: The GitHub repo to use
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubBranch:
    Description: The GitHub branch to use - defaults to 'master' if not specified
    Type: String
    Default: master
    AllowedPattern: "[A-Za-z0-9-]+"

  TargetPipelineTemplateName:
    Description: Path to the template defining your target application code pipeline, e.g. 'pipeline.yaml'
    Type: String

  TargetPipelineStackName:
    Description: The name that will be used for the CloudFormation Stack of your application code pipeline, e.g. 'my-app-pipeline'
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"

Resources:
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
      - Name: Source
        Actions:
        - Name: Source
          InputArtifacts: []
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: 1
            Provider: GitHub
          OutputArtifacts:
          - Name: SourceCode
          Configuration:
            Owner: !Ref GitHubOwner
            Repo: !Ref GitHubRepo
            Branch: !Ref GitHubBranch
            PollForSourceChanges: false
            OAuthToken: !Ref GitHubOAuthToken
          RunOrder: 1
      - Name: Deploy
        Actions:
        - Name: CloudFormationDeploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          InputArtifacts:
            - Name: SourceCode
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_IAM
            RoleArn: !GetAtt CloudformationRole.Arn
            StackName: !Ref TargetPipelineStackName
            TemplatePath: !Sub "SourceCode::${TargetPipelineTemplateName}"
            ParameterOverrides: !Sub '{"GitHubOAuthToken": "${GitHubOAuthToken}"}'
          RunOrder: 1

  GithubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: 'true'
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/{Branch}
      - JsonPath: !Sub "$.commits[*].*[?(@ == '${TargetPipelineTemplateName}')]"
        MatchEquals: !Ref TargetPipelineTemplateName
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions

  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions

        